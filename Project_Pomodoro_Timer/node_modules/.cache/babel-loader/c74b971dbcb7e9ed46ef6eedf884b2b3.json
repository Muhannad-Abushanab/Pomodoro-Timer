{"ast":null,"code":"/**\n * Formats a number of minutes as 'mm:00'.\n *\n * For example,\n *    minutesToDuration(3) = '03:00'\n *    minutesToDuration(45) = '45:00'\n *\n * @param givenMinutes\n *    the number of minutes in the duration\n * @returns {string}\n *    the given minutes formatted as 'mm:00'\n */\nexport function minutesToDuration(givenMinutes) {\n  const minutes = Math.floor(givenMinutes).toString().padStart(2, \"0\");\n  return `${minutes}:00`;\n}\n/**\n * Formats a number of seconds as 'mm:ss'.\n *\n * For example,\n *    secondsToDuration(305) = '05:05'\n *    secondsToDuration(930) = '15:30'\n *\n * @param givenSeconds\n *    the number of seconds in the duration\n * @returns {string}\n *    the given seconds formatted as 'mm:ss'\n */\n\nexport function secondsToDuration(givenSeconds) {\n  const minutes = Math.floor(givenSeconds % 3600 / 60).toString().padStart(2, \"0\");\n  const seconds = Math.round(givenSeconds % 60).toString().padStart(2, \"0\");\n  return `${minutes}:${seconds}`;\n}","map":{"version":3,"names":["minutesToDuration","givenMinutes","minutes","Math","floor","toString","padStart","secondsToDuration","givenSeconds","seconds","round"],"sources":["C:/Users/Muhannad/OneDrive/Documents/Engineering-Immersion/Pomodoro-Timer/Project_Pomodoro_Timer/src/utils/duration/index.js"],"sourcesContent":["/**\n * Formats a number of minutes as 'mm:00'.\n *\n * For example,\n *    minutesToDuration(3) = '03:00'\n *    minutesToDuration(45) = '45:00'\n *\n * @param givenMinutes\n *    the number of minutes in the duration\n * @returns {string}\n *    the given minutes formatted as 'mm:00'\n */\n\nexport function minutesToDuration(givenMinutes) {\n  const minutes = Math.floor(givenMinutes).toString().padStart(2, \"0\");\n  return `${minutes}:00`;\n}\n\n/**\n * Formats a number of seconds as 'mm:ss'.\n *\n * For example,\n *    secondsToDuration(305) = '05:05'\n *    secondsToDuration(930) = '15:30'\n *\n * @param givenSeconds\n *    the number of seconds in the duration\n * @returns {string}\n *    the given seconds formatted as 'mm:ss'\n */\n\nexport function secondsToDuration(givenSeconds) {\n  const minutes = Math.floor((givenSeconds % 3600) / 60)\n    .toString()\n    .padStart(2, \"0\");\n  const seconds = Math.round(givenSeconds % 60)\n    .toString()\n    .padStart(2, \"0\");\n  return `${minutes}:${seconds}`;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,SAASA,iBAAT,CAA2BC,YAA3B,EAAyC;EAC9C,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,YAAX,EAAyBI,QAAzB,GAAoCC,QAApC,CAA6C,CAA7C,EAAgD,GAAhD,CAAhB;EACA,OAAQ,GAAEJ,OAAQ,KAAlB;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASK,iBAAT,CAA2BC,YAA3B,EAAyC;EAC9C,MAAMN,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAYI,YAAY,GAAG,IAAhB,GAAwB,EAAnC,EACbH,QADa,GAEbC,QAFa,CAEJ,CAFI,EAED,GAFC,CAAhB;EAGA,MAAMG,OAAO,GAAGN,IAAI,CAACO,KAAL,CAAWF,YAAY,GAAG,EAA1B,EACbH,QADa,GAEbC,QAFa,CAEJ,CAFI,EAED,GAFC,CAAhB;EAGA,OAAQ,GAAEJ,OAAQ,IAAGO,OAAQ,EAA7B;AACD"},"metadata":{},"sourceType":"module"}