{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Muhannad\\\\OneDrive\\\\Documents\\\\Engineering-Immersion\\\\Pomodoro-Timer\\\\Project_Pomodoro_Timer\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nimport Progress from \"./Progress\"; // These functions are defined outside of the component to insure they do not have access to state\n// and are, therefore more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\n\nfunction nextTick(prevState) {\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n  return { ...prevState,\n    timeRemaining\n  };\n}\n/**\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\n\n\nfunction nextSession(focusDuration, breakDuration) {\n  /**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */\n  return currentSession => {\n    if (currentSession.label === \"Focusing\") {\n      return {\n        label: \"On Break\",\n        timeRemaining: breakDuration * 60\n      };\n    }\n\n    return {\n      label: \"Focusing\",\n      timeRemaining: focusDuration * 60\n    };\n  };\n}\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false); // The current session - null where there is no session running\n\n  const [session, setSession] = useState(null); // ToDo: Allow the user to adjust the focus and break duration.\n\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuraction] = useState(5);\n\n  const changeFocusTime = event => {\n    if (event && focusDuration <= 55) {\n      setFocusDuration(focusDuration + 5);\n    } else if (!event && focusDuration >= 10) {\n      setFocusDuration(focusDuration - 5);\n    }\n  };\n\n  const changeBreakTime = event => {\n    if (event && breakDuration <= 14) {\n      setBreakDuraction(breakDuration + 1);\n    } else if (!event && breakDuration >= 2) {\n      setBreakDuraction(breakDuration - 1);\n    }\n  };\n\n  const handleStop = () => {\n    setSession(null);\n    setIsTimerRunning(false);\n  };\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You will not need to make changes to the callback function\n   */\n\n\n  useInterval(() => {\n    if (session.timeRemaining === 0) {\n      new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n      return setSession(nextSession(focusDuration, breakDuration));\n    }\n\n    return setSession(nextTick);\n  }, isTimerRunning ? 1000 : null);\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n\n  function playPause() {\n    setIsTimerRunning(prevState => {\n      const nextState = !prevState;\n\n      if (nextState) {\n        setSession(prevStateSession => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession === null) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60\n            };\n          }\n\n          return prevStateSession;\n        });\n      }\n\n      return nextState;\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", minutesToDuration(focusDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-focus\",\n    onClick: () => {\n      changeFocusTime(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-focus\",\n    onClick: () => {\n      changeFocusTime(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }, \"Break Duration: \", minutesToDuration(breakDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-break\",\n    onClick: () => {\n      changeBreakTime(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-break\",\n    onClick: () => {\n      changeBreakTime(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"stop\",\n    title: \"Stop the session\",\n    disabled: !session,\n    onClick: handleStop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Progress, {\n    session: session,\n    focusDuration: focusDuration,\n    breakDuration: breakDuration,\n    isTimerRunning: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Pomodoro;","map":{"version":3,"names":["React","useState","classNames","useInterval","minutesToDuration","secondsToDuration","Progress","nextTick","prevState","timeRemaining","Math","max","nextSession","focusDuration","breakDuration","currentSession","label","Pomodoro","isTimerRunning","setIsTimerRunning","session","setSession","setFocusDuration","setBreakDuraction","changeFocusTime","event","changeBreakTime","handleStop","Audio","play","playPause","nextState","prevStateSession","oi"],"sources":["C:/Users/Muhannad/OneDrive/Documents/Engineering-Immersion/Pomodoro-Timer/Project_Pomodoro_Timer/src/pomodoro/Pomodoro.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nimport Progress from \"./Progress\";\n\n// These functions are defined outside of the component to insure they do not have access to state\n// and are, therefore more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\nfunction nextTick(prevState) {\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n  return {\n    ...prevState,\n    timeRemaining,\n  };\n}\n\n/**\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\nfunction nextSession(focusDuration, breakDuration) {\n  /**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */\n  return (currentSession) => {\n    if (currentSession.label === \"Focusing\") {\n      return {\n        label: \"On Break\",\n        timeRemaining: breakDuration * 60,\n      };\n    }\n    return {\n      label: \"Focusing\",\n      timeRemaining: focusDuration * 60,\n    };\n  };\n}\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  // The current session - null where there is no session running\n  const [session, setSession] = useState(null);\n\n  // ToDo: Allow the user to adjust the focus and break duration.\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuraction] = useState(5);\n\n  const changeFocusTime = (event) => {\n    if (event && focusDuration <= 55) {\n      setFocusDuration(focusDuration + 5);\n    } else if (!event && focusDuration >= 10) {\n      setFocusDuration(focusDuration - 5);\n    }\n  };\n\n  const changeBreakTime = (event) => {\n    if (event && breakDuration <= 14) {\n      setBreakDuraction(breakDuration + 1);\n    } else if (!event && breakDuration >= 2) {\n      setBreakDuraction(breakDuration - 1);\n    }\n  };\n\n  const handleStop = () => {\n    setSession(null);\n    setIsTimerRunning(false);\n  };\n\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You will not need to make changes to the callback function\n   */\n  useInterval(\n    () => {\n      if (session.timeRemaining === 0) {\n        new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n        return setSession(nextSession(focusDuration, breakDuration));\n      }\n      return setSession(nextTick);\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n  function playPause() {\n    setIsTimerRunning((prevState) => {\n      const nextState = !prevState;\n      if (nextState) {\n        setSession((prevStateSession) => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession === null) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60,\n            };\n          }\n          return prevStateSession;\n        });\n      }\n      return nextState;\n    });\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* TODO: Update this text to display the current focus session duration */}\n              Focus Duration: {minutesToDuration(focusDuration)}\n            </span>\n            <div className=\"input-group-append\">\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-focus\"\n                onClick={() => {\n                  changeFocusTime(false);\n                }}\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n              {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-focus\"\n                onClick={() => {\n                  changeFocusTime(true);\n                }}\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* TODO: Update this text to display the current break session duration */}\n                Break Duration: {minutesToDuration(breakDuration)}\n              </span>\n              <div className=\"input-group-append\">\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"decrease-break\"\n                  onClick={() => {\n                    changeBreakTime(false);\n                  }}\n                >\n                  <span className=\"oi oi-minus\" />\n                </button>\n                {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"increase-break\"\n                  onClick={() => {\n                    changeBreakTime(true);\n                  }}\n                >\n                  <span className=\"oi oi-plus\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session. and disable the stop button when there is no active session */}\n            {/* TODO: Disable the stop button when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-testid=\"stop\"\n              title=\"Stop the session\"\n              disabled={!session}\n              onClick={handleStop}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <Progress\n        session={session}\n        focusDuration={focusDuration}\n        breakDuration={breakDuration}\n        isTimerRunning={isTimerRunning}\n      />\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}